/**    
 * 文件名：ListenerServer.java    
 *    
 * 版本信息：    
 * 日期：2017年6月11日    
 * Copyright 足下 Corporation 2017     
 * 版权所有    
 *    
 */
package NetProtocol;

import java.util.HashSet;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.locks.Lock;
import java.util.concurrent.locks.ReentrantLock;

import com.google.common.eventbus.AllowConcurrentEvents;

import FactoryPackaget.ReturnCode;
import FactoryPackaget.SubNetPackaget;
import NetModel.DataModel;
import RecviceData.Session;

/**    
 *     
 * 项目名称：NetProtocol    
 * 类名称：ListenerServer    
 * 类描述：    接收数据
 * 创建人：jinyu    
 * 创建时间：2017年6月11日 下午11:03:32    
 * 修改人：jinyu    
 * 修改时间：2017年6月11日 下午11:03:32    
 * 修改备注：    
 * @version     
 *     
 */
public class ListenerServer {
    ConcurrentHashMap<String,Session> hashOffer=new ConcurrentHashMap<String,Session>(); 
    private Lock lock = new ReentrantLock();// 锁对象 
    ExecutorService cachedThreadPool = Executors.newCachedThreadPool();
    HashSet<String> set=new  HashSet<String> ();
    @AllowConcurrentEvents
public void  monitorServer(DataModel monitorData)
{
        ReturnCode returnCode=SubNetPackaget.AnalysisNetPackaget(monitorData.data);
        String key=monitorData.srcIP+monitorData.localPort;
        Session session=hashOffer.getOrDefault(key, null);
  
        
        
}
}
