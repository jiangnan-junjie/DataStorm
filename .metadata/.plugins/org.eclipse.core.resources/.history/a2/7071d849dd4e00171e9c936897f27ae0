/**    
 * 文件名：ListenerServer.java    
 *    
 * 版本信息：    
 * 日期：2017年6月10日    
 * Copyright 足下 Corporation 2017     
 * 版权所有    
 *    
 */
package ListernerServer;



import java.util.HashMap;

import com.google.common.eventbus.AllowConcurrentEvents;

import ComModel.YWModel;
import IServer.IProcessServer;
import NetPackaget.PackagetRandom;


/**    
 *     
 * 项目名称：DataStromServer    
 * 类名称：ListenerServer    
 * 类描述：    
 * 创建人：jinyu    
 * 创建时间：2017年6月10日 下午1:33:12    
 * 修改人：jinyu    
 * 修改时间：2017年6月10日 下午1:33:12    
 * 修改备注：    
 * @version     
 *     
 */
public class ListenerRequest{
    HashMap<Long,CallNetModel> hashMap=new  HashMap<Long,CallNetModel>();
   @AllowConcurrentEvents
public void receviceData(YWModel data)
{
    //处理业务
     //所有查找
       if(data.reqCall)
       {
           CallNetModel model=new CallNetModel();
           model.srcIP=data.srcIP;
           model.srcPort=data.srcPort;
           model.socket=data.socket;
           model.netType=data.netType;
           model.id=PackagetRandom.getInstanceID(this);
           hashMap.put(model.id, model);
       }
       IProcessServer cur= CurrentServer.getProcess(data.data.serverName);
       cur.recRequest(data.data);
}
public void reCallData(byte[]data)
{
    
}
}
    

